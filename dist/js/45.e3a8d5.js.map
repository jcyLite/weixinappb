{"version":3,"file":"./js/45.e3a8d5.js","sources":["webpack:///public/tk_components/components/button/ripple.js"],"sourcesContent":["\tvar colour = \"#704811\";\n\tvar opacity = 0.3;\n\tvar ripple_within_elements = ['input', 'button', 'div', 'a'];\n\tvar ripple_without_diameter = 50;\n\n\tvar overlays = {\n\t    items: [],\n\t    get: function() {\n\t        var $element;\n\t        for (var i = 0; i < overlays.items.length; i++) {\n\t            $element = overlays.items[i];\n\t            if ($element.transition_phase === false) {\n\t                $element.transition_phase = 0;\n\t                return $element;\n\t            }\n\t        }\n\t        $element = document.createElement(\"div\");\n\t        $element.style.position = \"absolute\";\n\t        $element.style.opacity = opacity;\n\t        //$element.style.outline = \"10px solid red\";\n\t        $element.style.pointerEvents = \"none\";\n\t        $element.style.background = \"-webkit-radial-gradient(\" + colour + \" 64%, rgba(0,0,0,0) 65%) no-repeat\";\n\t        $element.style.background = \"radial-gradient(\" + colour + \" 64%, rgba(0,0,0,0) 65%) no-repeat\";\n\t        $element.style.transform = \"translateZ(0)\";\n\t        $element.transition_phase = 0;\n\t        $element.rid = overlays.items.length;\n\t        $element.next_transition = overlays.next_transition_generator($element);\n\t        document.body.appendChild($element);\n\t        overlays.items.push($element);\n\t        return $element;\n\t    },\n\t    next_transition_generator: function($element) {\n\t        return function() {\n\t            $element.transition_phase++;\n\t            switch ($element.transition_phase) {\n\t                case 1:\n\t                    $element.style[transition] = \"all 0.2s ease-in-out\";\n\t                    $element.style.backgroundSize = $element.ripple_backgroundSize;\n\t                    $element.style.backgroundPosition = $element.ripple_backgroundPosition;\n\t                    setTimeout($element.next_transition, 0.2 * 1000); //now I know transitionend is better but it fires multiple times when multiple properties are animated, so this is simpler code and (imo) worth tiny delays\n\t                    break;\n\t                case 2:\n\t                    $element.style[transition] = \"opacity 0.15s ease-in-out\";\n\t                    $element.style.opacity = 0;\n\t                    setTimeout($element.next_transition, 0.15 * 1000);\n\t                    break;\n\t                case 3:\n\t                    overlays.recycle($element);\n\t                    break;\n\t            }\n\t        };\n\t    },\n\t    recycle: function($element) {\n\t        $element.style.display = \"none\";\n\t        $element.style[transition] = \"none\";\n\t        if ($element.timer) clearTimeout($element.timer);\n\t        $element.transition_phase = false;\n\t    }\n\t};\n\n\tvar transition = function() {\n\t    var i,\n\t        el = document.createElement('div'),\n\t        transitions = {\n\t            'WebkitTransition': 'webkitTransition',\n\t            'transition': 'transition',\n\t            'OTransition': 'otransition',\n\t            'MozTransition': 'transition'\n\t        };\n\t    for (i in transitions) {\n\t        if (transitions.hasOwnProperty(i) && el.style[i] !== undefined) {\n\t            return transitions[i];\n\t        }\n\t    }\n\t}();\n\n\tvar click = function(event) {\n\t    var $element = overlays.get(),\n\t        touch,\n\t        x,\n\t        y;\n\n\t    touch = event.touches ? event.touches[0] : event;\n\n\t    $element.style[transition] = \"none\";\n\t    $element.style.backgroundSize = \"3px 3px\";\n\t    $element.style.opacity = opacity;\n\t    if (ripple_within_elements.indexOf(touch.target.nodeName.toLowerCase()) > -1) {\n\t        x = touch.offsetX;\n\t        y = touch.offsetY;\n\n\t        var dimensions = touch.target.getBoundingClientRect();\n\t        if (!x || !y) {\n\t            x = (touch.clientX || touch.x) - dimensions.left;\n\t            y = (touch.clientY || touch.y) - dimensions.top;\n\t        }\n\t        $element.style.backgroundPosition = x + \"px \" + y + \"px\";\n\t        $element.style.width = dimensions.width + \"px\";\n\t        $element.style.height = dimensions.height + \"px\";\n\t        $element.style.left = (dimensions.left) + \"px\";\n\t        $element.style.top = (dimensions.top + document.body.scrollTop + document.documentElement.scrollTop) + \"px\";\n\t        var computed_style = window.getComputedStyle(event.target);\n\t        for (var key in computed_style) {\n\t            if (key.toString().indexOf(\"adius\") > -1) {\n\t                if (computed_style[key]) {\n\t                    $element.style[key] = computed_style[key];\n\t                }\n\t            } else if (parseInt(key, 10).toString() === key && computed_style[key].indexOf(\"adius\") > -1) {\n\t                $element.style[computed_style[key]] = computed_style[computed_style[key]];\n\t            }\n\t        }\n\t        $element.style.backgroundPosition = x + \"px \" + y + \"px\";\n\t        $element.ripple_backgroundPosition = (x - dimensions.width) + \"px \" + (y - dimensions.width) + \"px\";\n\t        $element.ripple_backgroundSize = (dimensions.width * 2) + \"px \" + (dimensions.width * 2) + \"px\";\n\t    } else { //click was outside of ripple element\n\t        x = touch.clientX || touch.x || touch.pageX;\n\t        y = touch.clientY || touch.y || touch.pageY;\n\n\t        $element.style.borderRadius = \"0px\";\n\t        $element.style.left = (x - ripple_without_diameter / 2) + \"px\";\n\t        $element.style.top = (document.body.scrollTop + document.documentElement.scrollTop + y - ripple_without_diameter / 2) + \"px\";\n\t        $element.ripple_backgroundSize = ripple_without_diameter + \"px \" + ripple_without_diameter + \"px\";\n\t        $element.style.width = ripple_without_diameter + \"px\";\n\t        $element.style.height = ripple_without_diameter + \"px\";\n\t        $element.style.backgroundPosition = \"center center\";\n\t        $element.ripple_backgroundPosition = \"center center\";\n\t        $element.ripple_backgroundSize = ripple_without_diameter + \"px \" + ripple_without_diameter + \"px\";\n\t    }\n\t    $element.ripple_x = x;\n\t    $element.ripple_y = y;\n\t    $element.style.display = \"block\";\n\t    setTimeout($element.next_transition, 20);\n\t};\n\texport default click\n\n\n// WEBPACK FOOTER //\n// public/tk_components/components/button/ripple.js"],"mappings":";;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApDA;AACA;AAsDA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}